services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - /srv/rsvp/pgdata:/var/lib/postgresql/data  # <-- bind mount
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rsvp -d rsvp"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  server:
    build: ./server
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  web:
    build:
      context:  ./web
      dockerfile: Dockerfile.prod  # uses nginx and proxies /api to server
    ports:
      - "80:80"
    depends_on:
      - server
    restart: unless-stopped
